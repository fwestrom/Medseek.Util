<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build;Test" InitialTargets="Prepare" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Configurable properties -->
  <PropertyGroup Label="Configurable Properties">
    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
    <RootDir Condition="'$(RootDir)' == ''">$(MSBuildProjectDirectory)\</RootDir>
    <SourceDir Condition="'$(SourceDir)' == ''">$(RootDir)</SourceDir>
    <BuildDir Condition="'$(BuildDir)' == ''">$(RootDir)build\</BuildDir>
    <ToolsDir Condition="'$(ToolsDir)' == ''">$(RootDir)tools\</ToolsDir>
    <NuGetDir Condition="'$(NuGetDir)' == ''">$(SourceDir).nuget\</NuGetDir>
    <Skip Condition="'$(Skip)' == ''" />
  </PropertyGroup>
  <PropertyGroup Label="Other Properties">
    <BuildBinDir>$(BuildDir)bin\</BuildBinDir>
    <BuildObjDir>$(BuildDir)obj\</BuildObjDir>
    <BuildPackagesDir>$(BuildDir)packages\</BuildPackagesDir>
    <DoClean Condition="'$(DoClean)' == ''">True</DoClean>
    <DoBuild Condition="'$(DoBuild)' == ''">True</DoBuild>
    <DoTest Condition="'$(DoTest)' == ''">True</DoTest>
    <DoPack Condition="'$(DoPack)' == ''">True</DoPack>
    <MSBuildCommunityTasksPath Condition="'$(MSBuildCommunityTasksPath)' == ''">$(SourceDir)packages\MSBuildTasks.1.4.0.65\tools\</MSBuildCommunityTasksPath>
    <MSBuildNUnitDllPath Condition="'$(MSBuildNUnitDllPath)' == ''"></MSBuildNUnitDllPath>
    <NuGetConfigPath Condition="'$(NuGetConfigPath)' == ''">$(NuGetDir)NuGet.config</NuGetConfigPath>
    <NuGetExePath Condition="'$(NuGetExePath)' == ''">$(NuGetDir)NuGet.exe</NuGetExePath>
    <NuGetTargetsPath Condition="'$(NuGetTargetsPath)' == ''">$(NuGetDir)NuGet.targets</NuGetTargetsPath>
    <SolutionDir>$(SourceDir)</SolutionDir>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">C:\Program Files (x86)\MSBuild\Microsoft\VisualStudio\v11.0\</VSToolsPath>
    <ProjectProperties>Configuration=$(Configuration)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);RootDir=$(RootDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);SourceDir=$(SourceDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);ToolsDir=$(ToolsDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);NuGetDir=$(NuGetDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);BuildDir=$(BuildDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);BuildBinDir=$(BuildBinDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);BuildObjDir=$(BuildObjDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);BuildPackagesDir=$(BuildPackagesDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);Skip=$(Skip)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);DebugSymbols=true</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);GenerateDocumentation=true</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);IntermediateOutputPath=$(BuildObjDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);OutputPath=$(BuildBinDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);SolutionDir=$(SolutionDir)</ProjectProperties>
    <ProjectProperties>$(ProjectProperties);VSToolsPath=$(VSToolsPath)</ProjectProperties>
  </PropertyGroup>

  <!-- Build items -->
  <ItemGroup>
    <ExcludeProjectReferences Include="$(SourceDir)Medseek.Util*\ProjectTemplate.csproj" />
    <ExcludeProjectReferences Include="$(SourceDir)Medseek.Util*\*.HelloWorld.csproj" />
    <ExcludeProjectReferences Include="$(SourceDir)Medseek.Util*\*.ProjectTemplate.csproj" />
    <ExcludeProjectReferences Include="$(SourceDir)Medseek.Util*\*.Extension.csproj" />
    <ProjectReference Include="$(SourceDir)Medseek.Util*\*.csproj" Exclude="@(ExcludeProjectReferences)" />
  </ItemGroup>
  <ItemGroup>
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Ioc.Castle.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Logging.Log4Net.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Logging.NLog.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Messaging.RabbitMq.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.MicroServices.Host.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Plugin.WebApi.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Serialization.Newtonsoft.Json.csproj" />
    <NuSpec Include="$(SourceDir)Medseek.*\Medseek.Util.Testing.csproj" />
  </ItemGroup>

  <!-- Import External Project Files -->
  <Import Project="$(MSBuildCommunityTasksPath)MSBuild.Community.Tasks.Targets" />

  <!-- Prepare -->
  <Target Name="Prepare">
    <ItemGroup>
      <PrepareDir Include="$(BuildDir)" />
      <PrepareDir Include="$(BuildBinDir)" />
      <PrepareDir Include="$(BuildObjDir)" />
      <PrepareDir Include="$(BuildPackagesDir)" />
      <Skip Include="$(Skip)" />
    </ItemGroup>
    <Message Text="Skip: %(Skip.Identity)" />
    <MakeDir Directories="@(PrepareDir)" />
    <CreateProperty Value="False">
      <Output PropertyName="Do%(Skip.Identity)" TaskParameter="Value" />
    </CreateProperty>
    <Exec Command='$(NuGetExePath) restore -Verbosity detailed -ConfigFile "$(NuGetConfigPath)" -NonInteractive' WorkingDirectory="$(SourceDir)" />
  </Target>

  <!-- Clean -->
  <Target Name="Clean" Condition="$(DoClean)">
    <ItemGroup>
      <Directory Include="@(PrepareDir)" />
      <Directory Include="%(ProjectReference.RelativeDir)bin\" />
      <Directory Include="%(ProjectReference.RelativeDir)obj\" />
      <File Include="%(Directory.Identity)**" />
    </ItemGroup>
    <RemoveDir Directories="@(Directory)" ContinueOnError="true" />
    <Delete Files="@(File)" TreatErrorsAsWarnings="true" />
  </Target>

  <!-- Build -->
  <Target Name="Build" Condition="$(DoBuild)">
    <MSBuild Projects="@(ProjectReference)" Properties="$(ProjectProperties)" RebaseOutputs="true">
      <Output TaskParameter="TargetOutputs" ItemName="OutputAssemblies" />
    </MSBuild>
  </Target>

  <!-- Test -->
  <Target Name="Test" Condition="$(DoTest)" DependsOnTargets="Build">
    <PropertyGroup>
      <NeedUpdatePath>True</NeedUpdatePath>
      <NeedUpdatePath Condition="'$(MSBuildNUnitDllPath)' != ''">False</NeedUpdatePath>
    </PropertyGroup>
    <Message Text="MSBuildNUnitDllPath = $(MSBuildNUnitDllPath)" />
    <ItemGroup Condition="$(NeedUpdatePath)">
      <MSBuildNUnitDll Include="$(SourceDir)packages\MSBuild.NUnit.*\tools\MSBuild.NUnit.dll" />
    </ItemGroup>
    <CreateProperty Value="%(MSBuildNUnitDll.Identity)" Condition="$(NeedUpdatePath)">
      <Output PropertyName="MSBuildNUnitDllPath" TaskParameter="Value" />
    </CreateProperty>
    <Message Text="MSBuildNUnitDllPath = $(MSBuildNUnitDllPath)" Condition="$(NeedUpdatePath)" />
    <CallTarget Targets="Test-NUnit" Condition="!$(NeedUpdatePath)" />
    <MSBuild
      Projects="$(MSBuildProjectFullPath)"
      Targets="Test"
      Properties="MSBuildNUnitDllPath=$(MSBuildNUnitDllPath);DoBuild=false;DoBuild=false"
      Condition="$(NeedUpdatePath)"
      />
  </Target>
  <UsingTask TaskName="NUnit" AssemblyFile="$(MSBuildNUnitDllPath)" Condition="'$(MSBuildNUnitDllPath)' != ''" />
  <Target Name="Test-NUnit" Condition="'$(RunIncompleteTestTarget)' == true">
    <ItemGroup>
      <TestAssembly Include="$(BuildBinDir)Medseek.Util.Test.dll" />
      <TestAssembly Include="$(BuildBinDir)Medseek.Util.*.Test.dll" />
    </ItemGroup>
    <NUnit
      Assemblies="@(TestAssembly)"
      TestCaseTimeoutInMilliseconds="30000"
      WorkingDirectory="$(BuildBinDir)"
      />
  </Target>

  <!-- Pack -->
  <Target Name="Pack" DependsOnTargets="Build" Inputs="@(NuSpec)" Outputs="$(BuildPackagesDir)%(Filename).nupkg" Condition="$(DoPack)">
    <!--
    <MSBuild.Community.Tasks.Git.GitBranch LocalPath="$(SourceDir)">
      <Output TaskParameter="Branch" PropertyName="GitBranch" />
    </MSBuild.Community.Tasks.Git.GitBranch>
    <PropertyGroup>
      <PreReleaseTag Condition="'$(GitBranch)' != 'develop'">$(GitBranch)</PreReleaseTag>
    </PropertyGroup>
    -->
    <PropertyGroup>
      <PackCommand>$(NuGetExePath) pack "%(NuSpec.Identity)"</PackCommand>
      <PackCommand>$(PackCommand) -BasePath $(BuildBinDir)</PackCommand>
      <PackCommand>$(PackCommand) -OutputDirectory $(BuildPackagesDir)</PackCommand>
      <PackCommand>$(PackCommand) -Symbols</PackCommand>
      <PackCommand>$(PackCommand) -Prop Configuration=$(Configuration)</PackCommand>
      <PackCommand>$(PackCommand) -Prop OutputPath=$(BuildBinDir)</PackCommand>
      <PackCommand>$(PackCommand) -Verbosity detailed</PackCommand>
    </PropertyGroup>
    <Exec Command="$(PackCommand)" WorkingDirectory="$(BuildDir)" />
    <ItemGroup>
      <ToCopy Include="$(BuildBinDir)*.vsix" />
    </ItemGroup>
    <Copy SourceFiles="@(ToCopy)" DestinationFolder="$(BuildPackagesDir)" />
  </Target>
</Project>